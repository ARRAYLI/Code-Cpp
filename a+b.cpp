/*

题目描述
实现一个加法器，使其能够输出a+b的值。
输入描述:

输入包括两个数a和b，其中a和b的位数不超过1000位。



输出描述:

可能有多组测试数据，对于每组数据，
输出a+b的值。


输入例子:

2 6
10000000000000000000 10000000000000000000000000000000


输出例子:

8
10000000000010000000000000000000

*/

/*
#include<iostream>
#include<string.h>
using namespace std;

#define LEN 1001

// 字符串逆置函数
void str_reverse(char str[], int len)
{
	int i;
	int k = 0;
	char tmp[1000] = "";
	for (i = len-1; i >= 0; i--)
		tmp[k++] = str[i];

	memset(str,0x00,len);
	strcpy(str,tmp);
}

// 加法运算

void add(char res[],int len,char str1[], int len1, char str2[], int len2)
{
	int k ;
	int c=0;
	if (len1 == len2)
	{
		k = 0;
		for (int i = 0; i < len1; i++)
		{
			int t = str1[i] - '0' + str2[i] - '0' + c;
			if (t >= 10)
			{

				res[k++]=t % 10 + '0';
				c = 1;
			//	res[k++] = (t / 10) + '0';
			}
			else
			{
				res[k++] = t + '0';
			}
		}
	}
	else
	{
		c = 0;
		if (len1 < len2)
		{
			char tmp[1000] = "";
			int temp = len1;
			len1 = len2;
			len2 = len1;
			strcpy(tmp,str1);
			strcmp(str1,str2);
			strcmp(str2,str1);
		}


		// 先队较短的数字的位数的个数进行加法运算
		k = 0;
		for (int i = 0; i < len2; i++)
		{
			int t = str1[i]-'0' + str2[i] - '0'+c;
			if (t >= 10)
			{
				res[k++]= (t % 10 + '0');
				c = 1;
			//	res[k] += 0+'1';
			}
			else
			{
				res[k++] = t + '0';
			}
		}

		for (int i = len2; i<len1; i++)
		{
			int t = str1[i] - '0' + str2[i] -0 + c;
			if (t >= 10)
			{
				res[k++] = (t % 10 + '0');
				c = 1;
			}
			else
			{
				res[k++] = t + '0';
			}
		}
	}
	if (c)
	{
		res[k++] = c + '0';
	}
}

int main(void)
{
	char str1[LEN] = "";
	char str2[LEN] = "";
	char res[LEN] = "";
	while (cin >> str1 >>str2)
	{
		int len1 = strlen(str1);
		int len2 = strlen(str2);
		
		str_reverse(str1,len1);
		str_reverse(str2, len2);
		add(res, LEN,str1,len1,str2,len2);
		str_reverse(res,strlen(res));
		puts(res);
		memset(res,0,strlen(res));
		memset(str1, 0, strlen(str1));
		memset(str2, 0, strlen(str2));
	}

	return 0;
}
*/
/*
   94419760584745207966505775430571839521700274058756011073479402052757730819513216712252495729108425649264051399844586972602767164922586337275 
*/
/*


对应输出应该为:

*/


/*





*/

//对应输出应该为:
/*



*/

/*
你的输出为:
1 

*/

/*
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
int main()
{
	int n, m, t, a2, b2, e[1100], j, i, x = 1;
	char a[1100], b[1100];
	while (scanf("%s %s", a, b) != EOF) {
		int a1[1100] = { 0 }, b1[1100] = { 0 };
		a2 = strlen(a);
		b2 = strlen(b);
		if (a2 >= b2)
			j = a2;
		else
			j = b2;
		for (i = a2 - 1, t = j - 1; i >= 0; i--, t--)
		{
			a1[t] = a[i] - '0';
		}
		for (i = b2 - 1, t = j - 1; i >= 0; i--, t--)
		{
			b1[t] = b[i] - '0';
		}
		for (i = 0; i <= j - 1; i++)
		{
			e[i] = b1[i] + a1[i];
		}
		for (i = j - 1; i > 0; i--)
		{
			if (e[i] >= 10)
			{
				e[i - 1]++;
				e[i] = e[i] % 10;
			}
		}
		for (i = 0; i < j; i++)
		{
			printf("%d", e[i]);
		}
		printf("\n");
	}
	return 0;
}
*/



#include<iostream>
#include<cstring>
using namespace std;
#define LEN 1000

int main(void)
{
	char str1[LEN] = "";
	char str2[LEN] = "";
	int res[LEN] = { 0 };
	int t = 0;
	while (cin>>str1>>str2)
	{
		int len1 = strlen(str1);
		int len2 = strlen(str2);

		int num1[LEN] = { 0 };
		int num2[LEN] = { 0 };
		int index = 0;
		if (len1 >= len2)
			index = len1;
		else
			index = len2;

		for (int i = len1 - 1, t = index - 1; i >= 0; i--, t--)
			num1[t] = str1[i] - '0';

		for (int j = len2 - 1, t = index - 1; j >= 0; j--, t--)
			num2[t] = str2[j] - '0';

		for (int k = index - 1; k >= 0; k--)
			res[k] = num1[k] + num2[k];

		for (int i = index-1; i >0; i--)
		{
			if (res[i]>=10)
			{
				res[i-1]++;
				res[i] = res[i] %10;
			}

		}

		for (int i = 0; i < index; i++)
		{
			cout << res[i];
		}

		cout << endl;

	}
	return 0;
}
